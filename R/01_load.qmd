---
title: "01_load"
format: 
  html:
    embed-resources: true
editor: visual
---

## Loading Libraries

```{r}
#Loading libraries
rm(list=ls())
library(here)
library(httr)
library(readr)
```

## Loading of Raw Data from URL

```{r}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)

raw_dir <- here("data/_raw")
data_dir <- here("data/")

if (!dir.exists(raw_dir)) {
  dir.create(path = raw_dir)
  message("Created directory: ", raw_dir)
}

if (!dir.exists(data_dir)) {
  dir.create(path = data_dir)
  message("Created directory: ", data_dir)
}

url <- "https://www.kaggle.com/api/v1/datasets/download/aadyasingh55/drug-dataset"
temp_zip <- tempfile(fileext = ".zip")   
temp_dir <- tempdir()  

response <- GET(url, write_disk(temp_zip, overwrite = TRUE))

unzip(temp_zip, exdir = temp_dir)

extracted_files <- list.files(temp_dir, full.names = TRUE)
message("Extracted files: ", paste(extracted_files, collapse = ", "))

csv_file <- grep("\\.csv$", extracted_files, value = TRUE)

dataset <- read_csv(csv_file[1], show_col_types = FALSE)

```

## Saving Raw Data as CSV in Raw Data Folder

A raw data is stored in order to always have an original copy of the data used for the project.

```{r}
# Specify the file path with the new name
file_path <- file.path(raw_dir, "raw_data.csv")

# Save the dataframe as a CSV file
write.csv(dataset, file_path, row.names = FALSE)
```

## Saving Raw Data as TSV in Data Folder

Furthermore, the data is stored in the data folder, which will allow for use later in analysis and visualization.

```{r}

save_path <- file.path(data_dir, "01_dat_load.tsv")

# Save the dataframe as a TSV file
write_tsv(dataset, save_path)

```

### Rendering to results folder

Det er noget alla det her vi skal gÃ¸re, gemmer dog pt. under R

```{r}

# Define the output directory using tempdir()
output_directory <- file.path(tempdir(), "group_10_project/results")

# Render the RMarkdown file to the specified output directory
rmarkdown::render("01_load.qmd", output_dir = output_directory)

```

```{r}


```
