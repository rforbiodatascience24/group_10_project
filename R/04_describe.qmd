---
title: "04_describe"
format: html
editor: visual
---

## Loading libraries and data

### Loading libraries

Loading the relevant libraries.

```{r}
rm(list=ls())
library("tidyverse")
library("dplyr")
library("readr")
```

### Loading long format augmented clean data

```{r}
#| message: false

# Loading the clean data tsv file 
aug_clean_data <- read_tsv(here('data/03_dat_aug.tsv'))
```

## Descriptive statistics of the data

The Drug data set provides information about various types of medications ranging from treatments of cancer, Alzheimer's disease, and Bacterial infections to more simple symptomatic drugs in treating dry cough, common colds, and for pain relief.\
The types of medications vary greatly, therefore this project will only be investigating drugs applicable for the treatment of cancer. This will streamline the project and make it easier to make concrete conclusions.

The purpose of the data is to assist healthcare professionals and patients in making decisions when choosing/using a medication. Therefore, the description and analysis of the data focuses on this perspective and introduces plots that can further aid in this aim.

The data is introduced after both cleaning and augmentation have been performed. The aim of this section is to introduce descriptive statistics in regards to distribution of classes in the different variables.

The raw data set investigates the composition, administration type, applications, and side effects of the different medications. Furthermore, the drugs are reviewed by the user and split into poor, average, and excellent reviews by percentages.

Underneath an elaboraqtion of the specific can be found:

-   The active pharmaceutical ingredient (API) describes the main ingredients in a medicine that causes the desired effect. In the cancer data set information can be found about the name, amount, and units of API.

-   The variable Medicine_Name is the trade name of the medication.

-   The variable Manufacturer is the pharmaceutical company that produces the medication.

-   The variable Administration_type explains how the specific medication is taken by the patient.

-   The side effect variable is split into number and type, and tells which adverse effects are associated with the medication.

### Dimensionality of the data

Firstly, the dimensionality of the data set is investigated to get an idea of its size.\
The number of variables is shown and a view of the data given.

```{r}
# Checking for dimensionality of dataset 
aug_clean_data |> 
  dim_desc()

# Finding number of variables
aug_clean_data |> 
  length()

# Showing the data 
aug_clean_data |> 
  View()

```

### Investigating number of unique cancer types

It is interesting to look at how many different cancer types are present is in the data set and which types it is.

```{r}
# Find unique types of cancer from the Application_type variable
unique_cancer_rows <- aug_clean_data |>
  select(Application_type) |>
  filter(str_detect(Application_type, regex("cancer", ignore_case = TRUE))) |>
  # Getting the unique types
  distinct() 

# Number of different cancer types
unique_cancer_rows |>
  dim_desc()

# Overview of the cancer types
View(unique_cancer_rows)

```

### Mean, maximum, and minimum number of side effects

The Count_Side_Effects variable is investigated in order to find the average number of side effects for all the cancer treatment drugs. Furthermore, the maximum and minimum number of side effects is also found.

```{r}
# Summarizing the mean, maximum, and minimum for the Count_Side_Effects variable
aug_clean_data |> 
  summarise(Mean_Side_Effect_count = mean(Count_Side_Effects), Max_Side_Effect_count = max(Count_Side_Effects), Min_Side_Effect_count = min(Count_Side_Effects))

```

It can be observed that the lowest number of side effects is one and the maximum number of side effects is 23. Furthermore, the average number of side effects for the drugs is around 13.

### Mean, maximum, and minimum number of active ingredients

Now, the API_Count variable is investigated to look into the maximum, minimum, and average number of active pharmaceutical ingredients.

```{r}
# Summarizing the mean, maximum, and minimum for the Count_Side_Effects variable
aug_clean_data |> 
  summarise(Mean_API_count = mean(Count_API), Max_API_count = max(Count_API), Min_API_count = min(Count_API))

```

The maximum number of active ingredients in the cancer treatment drugs is two and the minimum number is one. The average number of ingredients is close to one, therefore most drugs have one active ingredient.

### Investigating the application variables

Lastly, it is investigated what the minimum, maximum, and average number of applications is to see how many different uses the cancer treatment drugs have and how they are distributed.

```{r}
# Summarizing the mean, maximum, and minimum for the Count_Side_Effects variable
aug_clean_data |> 
  summarise(Mean_Application_count = mean(Count_Application), Max_Application_count = max(Count_Application), Min_Application_count = min(Count_Application))

```

There are up to six different applications of the different cancer drugs and minimum one application. The average number of applications for the drugs is around 3, which means most drugs can treat more than one type of cancer.

\
It is also investigated how many different applications there is and what there are.

```{r}
# Finding unique drug names from the Medicine_Name variable
unique_application <- aug_clean_data |>
  select(Application_type) |>
  # Getting the unique types
  distinct() 

# Number of different drugs
unique_application |>
  dim_desc()

# Viewing the different drug names
View(unique_application)
```

There are 53 different applications of the drugs, which means that 53 different cancer types can be treated with the drugs from this data set. When looking at the output of the unique applications it can be seen that not all the 53 applications are meaningful. Some of the applications are e.g. Non, NA, cancer, H, and P. Withdrawing these applications yields 48 different cancers being treated with these drugs.

### Investigating the different drugs

Underneath it is investigated how many unique drugs there is in the cancer data set. In order to get an idea of how many times the different drugs appear a histogram is made.

-   plotte hvor mange gange hver drug går igen (plot)

```{r}

# Finding unique drug names from the Medicine_Name variable
unique_drugs <- aug_clean_data |>
  select(Medicine_Name) |>
  # Getting the unique types
  distinct() 

# Number of different drugs
unique_drugs |>
  dim_desc()

# Viewing the different drug names
View(unique_drugs)
```

```{r}

# The data is changed into fractions for the Medicine_Name variable
drug_name_data <- aug_clean_data |>
  # Grouping categorial variable to distinct the medications
  group_by(Medicine_Name) |>
  # Taking each medicine and dividing by total number of medicines/rows
  summarise(Proportion = n() / nrow(aug_clean_data)) |>
  ungroup()

# A histogram of the 
ggplot(data = drug_name_data, 
       mapping = aes(x = Medicine_Name, y = Proportion)) +
  geom_bar(stat = "identity") + 
  labs(title = "Frequency of different drugs",
       x = "Drug",
       y = "Amount") + 
  # Adjusting the angle of the x-axis text and making it smaller
  theme(axis.text.x = element_text(angle = 90, hjust = 1, size=5)) + 
  # Making the proportions into percentages
  scale_y_continuous(labels = scales::percent_format())

```

The histogram gives an overview of the distribution of the different drugs. When investigating the histogram it can be seen that there are 10 drugs that each account for 2% or more. Underneath these 10 drugs are extracted.

```{r}
aug_clean_data |>
  # Counting the medications and sort them in descending order
  count(Medicine_Name, sort = TRUE) |>
  # Selecting the first 10 rows 
  head(10)

```

These are the 10 most common drugs for cancer treatment in the data set. Further analysis of these drugs can be done to see if there can be found a reason why these drugs are the most common. Fx if they have good reviews, fewer side effects, or maybe an easy to use administration type. (nåede jeg ikke lige at komme videre med)

### Investigating which drugs have most excellent reviews and most poor reviews

```{r}

Best_reviewed_drugs <- aug_clean_data |>
  filter(`Excellent_Review_%` > 85) |>
  select(Medicine_Name, `Excellent_Review_%`) |>
  distinct()

Best_reviewed_drugs
```

It can be observed that multiple drugs have 100% excellent reviews, meaning these drugs have only gotten good reviews. Overall, there are 11 drugs with 85% or more excellent reviews.

```{r}
Worst_reviewed_drugs <- aug_clean_data |>
  filter(`Poor_Review_%` > 85) |>
  select(Medicine_Name, `Poor_Review_%`) |>
  distinct()

Worst_reviewed_drugs
```

The same is true for poor reviews, that some drugs have only poor reviews. There are 7 drugs with 85% or more poor reviews.

Based on these findings the reason behind the excellent and poor reviews for these drugs can be found. This can be done by looking into the number and type of side effects, as it is probable that this will have an influence on the reviews.

-   hvor mange gange går applications igen (plot)

```{r}

```

-   antal af gange administration type går igen (plot)

```{r}

```

### Bonus

-   hvor mange gange kan et bestemt drug f.eks. behandle kræft (eller anden sygdom) - her kan application bruges

#### 
