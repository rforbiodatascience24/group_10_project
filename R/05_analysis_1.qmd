---
title: "05_analysis_1"
format: html
editor: visual
---

## Analysis of

```{r}
rm(list=ls())
library(tidyverse)
```

This analysis aims to investigate the reasons behind the excellent and poor reviews for the cancer drugs. This can be done by looking into the number and type of side effects, as it is probable that this will have an influence on the reviews. Firstly, the cancer data is loaded.

```{r, warning=FALSE}
#| message: false

# Loading the augmented data tsv file 
cancer_data <- read_tsv(here('data/03_dat_aug.tsv'))

```

The three review levels are shown in three scatter plots comparing number of side effects (x-axis) and the review percentages (y-axis).

```{r}

cancer_data |> 
    distinct(ID,
             Review_level,
           .keep_all = TRUE) |> 
  mutate(Review_level = factor(Review_level,   #Deciding the order appearing
                               levels = c("Poor_Review_%", 
                                          "Average_Review_%", 
                                          "Excellent_Review_%"))) |> 
  Scatter_Side_Effects_Review <- ggplot(aes(x = Count_Side_Effects,
             y = `Review_%`,
             fill = Review_level)) +
  geom_point(shape = 21, size = 3, color = "black") + 
  labs(x = "Count of Side Effects", 
       y = "Review Percentage", 
       title = "Number of Side Effects vs Review Percentage by Review Level") +
  theme_minimal() +
  facet_wrap(~ Review_level,
             labeller = as_labeller(c("Poor_Review_%" = "Poor Review", 
                                      "Average_Review_%" = "Average Review", 
                                      "Excellent_Review_%" = "Excellent Review"))) +     
  scale_fill_manual(values = c("Poor_Review_%" = "#F8766D",
                                "Average_Review_%" = "#619CFF",
                                "Excellent_Review_%" = "#00BA38")) +
  theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        legend.position = "none") 
ggsave(here("results/Scatter_Side_Effects_Review_all.png"), plot = Scatter_Side_Effects_Review, width = 6, height = 4)


```

From this plot we do not see a tendency of drugs with fewer side effects having a better review classification or vice versa. However, the correlation could perhaps be found by looking at the distribution of (lidt i tvivl om overgangen her..., vi sagde noget smart i gÃ¥r).

```{r}

library(ggplot2)
library(dplyr)

# Filter the data to remove duplicate IDs for each Administration_type
plot_data_poor <- cancer_data %>%
  filter(Review_level == "Poor_Review_%") %>%
  distinct(ID, Administration_type, .keep_all = TRUE)  # Keep only the first occurrence of each ID-Administration pair

# Count the number of unique observations per Administration_type
count_data <- plot_data_poor %>%
  group_by(Administration_type) %>%
  summarise(count = n_distinct(ID)) %>%
  ungroup()

# Merge the count data with the plot data
plot_data_poor <- left_join(plot_data_poor, count_data, by = "Administration_type")

# Create a new variable to fill the boxplot based on the count being greater than 3
plot_data_poor <- plot_data_poor %>%
  mutate(fill_value = ifelse(count > 3, "More than 3 obs", "Less than 3 obs"))

# Create the plot for Poor Review
p_poor <- ggplot(plot_data_poor, aes(x = Administration_type, y = `Review_%`, fill = fill_value)) +
  geom_boxplot(alpha = 0.7) +
  labs(x = "Administration Type", y = "Review Percentage", title = "Poor Review") +
  scale_fill_manual(values = c("More than 3 obs" =  "#F8766D", "Less than 3 obs" = "lightgrey"), 
                    name = "Count Category") +  # Add legend title
  theme_minimal() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  # Rotate x-axis labels
  # Add the count of observations to the x-axis labels
  scale_x_discrete(labels = function(x) {
    counts <- count_data$count[count_data$Administration_type %in% x]
    paste(x, " (n=", counts, ")", sep = "")
  })

# Print the plot
print(p_poor)



```

```{r}
p_avg <- ggplot(subset(cancer_data, Review_level == "Average_Review_%"), 
                aes(x = Administration_type, y = `Review_%`, fill = Review_level)) +
  geom_boxplot(alpha = 0.7) +
  labs(x = "Administration Type", y = "Review Percentage", title = "Average Review") +
  scale_fill_manual(values = c("Average_Review_%" = "#619CFF")) +
  theme_minimal() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(p_avg)
```

```{r}

# Filter the data to remove duplicate IDs for each Administration_type
plot_data_excellent <- cancer_data %>%
  filter(Review_level == "Excellent_Review_%") %>%
  distinct(ID, Administration_type, .keep_all = TRUE)  # Keep only the first occurrence of each ID-Administration pair

# Count the number of unique observations per Administration_type
count_data <- plot_data_excellent |> 
  group_by(Administration_type) |> 
  summarise(count = n_distinct(ID)) |> 
  ungroup()

# Merge the count data with the plot data
plot_data_excellent <- left_join(plot_data_excellent, count_data, by = "Administration_type")

# Create a new variable to fill the boxplot based on the count being greater than 3
plot_data_excellent <-plot_data_excellent %>%
  mutate(fill_value = ifelse(count > 3, "More than 3 obs", "Less than 3 obs"))

# Create the plot for Poor Review
p_excellent <- ggplot(plot_data_excellent, aes(x = Administration_type, y = `Review_%`, fill = fill_value)) +
  geom_boxplot(alpha = 0.7) +
  labs(x = "Administration Type", y = "Review Percentage", title = "Excellent Review") +
  scale_fill_manual(values = c("More than 3 obs" =  "#F8766D", "Less than 3 obs" = "lightgrey"), 
                    name = "Count Category") +  # Add legend title
  theme_minimal() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  # Rotate x-axis labels
  # Add the count of observations to the x-axis labels
  scale_x_discrete(labels = function(x) {
    counts <- count_data$count[count_data$Administration_type %in% x]
    paste(x, " (n=", counts, ")", sep = "")
  })

ggsave(here("results/boxplot_Excellent_Administration_type.png"), plot = p_excellent, width = 6, height = 4)
# Print the plot
print(p_excellent)

```

```{r}
boxplot_administration_type <- cancer_data |> 
  mutate(Review_level = factor(Review_level,   #Deciding the order appearing
                               levels = c("Poor_Review_%", 
                                          "Average_Review_%", 
                                          "Excellent_Review_%"))) |>
  ggplot(aes(x = Administration_type, 
             y = `Review_%`, 
             fill = Review_level)) +
  geom_boxplot(alpha = 0.7) +
  theme_minimal() +
  labs(x = "Administration Type", 
       y = "Review Percentage", 
       title = str_wrap("Review Percentage of Administration Types by Review Level",55),
       fill = "Review Level") +
  scale_fill_manual(values = c("Poor_Review_%" = "#F8766D",
                               "Average_Review_%" = "#619CFF",
                               "Excellent_Review_%" = "#00BA38"),
                    labels = c("Poor", 
                               "Average", 
                               "Excellent")) +
  theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        axis.text.x = element_text(angle = 45, 
                                   hjust = 1),
        legend.position = "bottom")

#ggsave(here("results/boxplot_administration_type.png"), plot = boxplot_administration_type, width = 6, height = 4)

print(boxplot_administration_type)
```
