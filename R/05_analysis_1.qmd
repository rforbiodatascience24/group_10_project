---
title: "05_analysis_1"
format: html
editor: visual
---

## Analysis of Review Levels

```{r}
rm(list=ls())
library(tidyverse)
```

This analysis aims to investigate the probable causes behind the excellent, average, and poor reviews for the cancer drugs. This can be done by looking into the number and type of side effects, as it is probable that this will have an influence on the reviews. Firstly, the cancer data is loaded.

```{r, warning=FALSE}
#| message: false

# Loading the augmented data tsv file 
cancer_data <- read_tsv(here('data/03_dat_aug.tsv'))

```

The three review levels are shown in three scatter plots comparing number of side effects (x-axis) and the review percentages (y-axis).

```{r}

Scatter_Side_Effects_Review <- cancer_data |> 
    distinct(ID,
             Review_level,
           .keep_all = TRUE) |> 
  mutate(Review_level = factor(Review_level,   #Deciding the order appearing
                               levels = c("Poor_Review_%", 
                                          "Average_Review_%", 
                                          "Excellent_Review_%")))
  ggplot(The_cancer_data,aes(x = Count_Side_Effects,
             y = `Review_%`,
             fill = Review_level)) +
  geom_point(shape = 21, size = 3, color = "black") + 
  labs(x = "Count of Side Effects", 
       y = "Review Percentage", 
       title = "Number of Side Effects vs Review Percentage by Review Level") +
  theme_minimal() +
  facet_wrap(~ Review_level,
             labeller = as_labeller(c("Poor_Review_%" = "Poor Review", 
                                      "Average_Review_%" = "Average Review", 
                                      "Excellent_Review_%" = "Excellent Review"))) +     
  scale_fill_manual(values = c("Poor_Review_%" = "#F8766D",
                                "Average_Review_%" = "#619CFF",
                                "Excellent_Review_%" = "#00BA38")) +
  theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        legend.position = "none")
  
#ggsave(here("results/Scatter_Side_Effects_Review_all.png"), plot = Scatter_Side_Effects_Review, width = 6, height = 4)
  
print(Scatter_Side_Effects_Review)

```

From this plot we do not see a tendency of drugs with fewer side effects having a better review classification or vice versa. However, the correlation could perhaps be found by looking at the distribution of (lidt i tvivl om overgangen her..., vi sagde noget smart i g√•r).

```{r}

# Filter the data to remove duplicate IDs for each Administration_type
Poor_review_distinct_data <- cancer_data |> 
  filter(Review_level == "Poor_Review_%") |> 
  distinct(ID, Administration_type, .keep_all = TRUE) 

# Count the number of unique observations per Administration_type
count_data <- Poor_review_distinct_data |> 
  group_by(Administration_type) |> 
  summarise(count = n_distinct(ID)) |> 
  ungroup()

# Merge the count data with the plot data
Poor_review_distinct_data <- left_join(Poor_review_distinct_data, count_data, by = "Administration_type")

# Create a new variable to fill the boxplot based on the count being greater than 3
Poor_review_distinct_data <-Poor_review_distinct_data |> 
  mutate(fill_value = ifelse(count > 3, "More than 3 obs", "3 or less obs"))

# Create the plot for Poor Review
Poor_review_boxplot <- ggplot(Poor_review_distinct_data,
                                   aes(x = Administration_type,
                                       y = `Review_%`,
                                       fill = fill_value)) +
  geom_boxplot(alpha = 0.7) +
  labs(x = "Administration Type",
       y = "Review Percentage",
       title = "Poor Review Percentage for Administration Types", 
       fill = "Count category") +
  scale_fill_manual(values = c("More than 3 obs" =  "#F8766D",
                               "3 or less obs" = "lightgrey")) +
  theme_minimal() + 
  theme(axis.text.x = element_text(angle = 45,
                                   hjust = 1))   
  # scale_x_discrete(labels = function(x) {
  #   counts <- count_data$count[count_data$Administration_type %in% x]
  #   paste(x, " (n=", counts, ")", sep = "")

  #})


# Print the plot
print(Poor_review_boxplot)



```

```{r}
# Filter the data to remove duplicate IDs for each Administration_type
Average_review_distinct_data <- cancer_data |> 
  filter(Review_level == "Average_Review_%") |> 
  distinct(ID, Administration_type, .keep_all = TRUE) 

# Count the number of unique observations per Administration_type
count_data <- Average_review_distinct_data |> 
  group_by(Administration_type) |> 
  summarise(count = n_distinct(ID)) |> 
  ungroup()

# Merge the count data with the plot data
Average_review_distinct_data <- left_join(Average_review_distinct_data, count_data, by = "Administration_type")

# Create a new variable to fill the boxplot based on the count being greater than 3
Average_review_distinct_data <-Average_review_distinct_data |> 
  mutate(fill_value = ifelse(count > 3, "More than 3 obs", "3 or less obs"))

# Create the plot for Poor Review
Average_review_boxplot <- ggplot(Average_review_distinct_data ,
                                   aes(x = Administration_type,
                                       y = `Review_%`,
                                       fill = fill_value)) +
  geom_boxplot(alpha = 0.7) +
  labs(x = "Administration Type",
       y = "Review Percentage",
       title = "Average Review Percentage for Administration Types", 
       fill = "Count category") +
  scale_fill_manual(values = c("More than 3 obs" = "#619CFF",
                               "3 or less obs" = "lightgrey")) +
  theme_minimal() + 
  theme(axis.text.x = element_text(angle = 45,
                                   hjust = 1))   
  # scale_x_discrete(labels = function(x) {
  #   counts <- count_data$count[count_data$Administration_type %in% x]
  #   paste(x, " (n=", counts, ")", sep = "")

  #})


# Print the plot
print(Average_review_boxplot)

```

```{r}

# Filter the data to remove duplicate IDs for each Administration_type
excellent_review_distinct_data <- cancer_data |> 
  filter(Review_level == "Excellent_Review_%") |> 
  distinct(ID, Administration_type, .keep_all = TRUE) 

# Count the number of unique observations per Administration_type
count_data <- excellent_review_distinct_data |> 
  group_by(Administration_type) |> 
  summarise(count = n_distinct(ID)) |> 
  ungroup()

# Merge the count data with the plot data
excellent_review_distinct_data <- left_join(excellent_review_distinct_data, count_data, by = "Administration_type")

# Create a new variable to fill the boxplot based on the count being greater than 3
excellent_review_distinct_data <-excellent_review_distinct_data |> 
  mutate(fill_value = ifelse(count > 3, "More than 3 obs", "3 or less obs"))

# Create the plot for Poor Review
excellent_review_boxplot <- ggplot(excellent_review_distinct_data,
                                   aes(x = Administration_type,
                                       y = `Review_%`,
                                       fill = fill_value)) +
  geom_boxplot(alpha = 0.7) +
  labs(x = "Administration Type",
       y = "Review Percentage",
       title = "Excellent Review Percentage for Administration Types", 
       fill = "Count category") +
  scale_fill_manual(values = c("More than 3 obs" =  "#00BA38",
                               "3 or less obs" = "lightgrey")) +
  theme_minimal() + 
  theme(axis.text.x = element_text(angle = 45,
                                   hjust = 1))   
  # scale_x_discrete(labels = function(x) {
  #   counts <- count_data$count[count_data$Administration_type %in% x]
  #   paste(x, " (n=", counts, ")", sep = "")

  #})

ggsave(here("results/boxplot_Excellent_Administration_type.png"), plot = excellent_review_boxplot, width = 6, height = 4)
# Print the plot
print(excellent_review_boxplot)

```

```{r}
boxplot_administration_type <- cancer_data |> 
  mutate(Review_level = factor(Review_level,   #Deciding the order appearing
                               levels = c("Poor_Review_%", 
                                          "Average_Review_%", 
                                          "Excellent_Review_%"))) |>
  ggplot(aes(x = Administration_type, 
             y = `Review_%`, 
             fill = Review_level)) +
  geom_boxplot(alpha = 0.7) +
  theme_minimal() +
  labs(x = "Administration Type", 
       y = "Review Percentage", 
       title = str_wrap("Review Percentage of Administration Types by Review Level",55),
       fill = "Review Level") +
  scale_fill_manual(values = c("Poor_Review_%" = "#F8766D",
                               "Average_Review_%" = "#619CFF",
                               "Excellent_Review_%" = "#00BA38"),
                    labels = c("Poor", 
                               "Average", 
                               "Excellent")) +
  theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        axis.text.x = element_text(angle = 45, 
                                   hjust = 1),
        legend.position = "bottom")

#ggsave(here("results/boxplot_administration_type.png"), plot = boxplot_administration_type, width = 6, height = 4)

print(boxplot_administration_type)
```
