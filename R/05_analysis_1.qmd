---
title: "05_analysis_1"
format: 
  html:
    embed-resources: true
editor: visual
---

## Analysis of Review Levels

This analysis aims to investigate the probable causes behind the excellent, average, and poor review levels for the cancer drugs.

### Influence of Number of Side Effects

It would be plausible to think that drugs with many side effects would be associated with a high percentage of poor reviews. This is investigated by looking into the number of side effects and their associated review percentage.

### Loading Libraries and the Augmented Data

Firstly, the environment is cleaned, then libraries and the cancer data is loaded.

```{r, echo = TRUE, warning = FALSE, message = FALSE}

# Cleaning environment
rm(list=ls())

# Loading libraries
library("tidyverse")
library("here")
library("stringr")

# Loading the augmented data tsv file 
cancer_data <- read_tsv(here('data/03_dat_aug.tsv'), show_col_types = FALSE)

```

The review levels are shown in three scatter plots comparing number of side effects (x-axis) and the review percentages (y-axis).

```{r}

# Making plot specific subset of data to only enclude one datapoint per unique ID and Review level.
Scatter_Side_Effects_Review <- cancer_data |> 
    distinct(ID, 
             Review_level,
             .keep_all = TRUE) |> 
  mutate(Review_level = factor(Review_level,
                               levels = c("Poor_Review_%", 
                                          "Average_Review_%", 
                                          "Excellent_Review_%"))) |> 
  
  #Plotting the three different Review levels vs side effects
  ggplot(aes(x = Count_Side_Effects,
             y = `Review_%`,
             fill = Review_level)) +
  geom_point(shape = 21,
             color = "black",
             size = 2) + 
  labs(x = "Number of Side Effects", 
       y = "Review Percentage", 
       title = "Number of Side Effects vs Review Percentage") +
  theme_minimal() +
  facet_wrap(~ Review_level,
             labeller = as_labeller(c("Poor_Review_%" = "Poor Review", 
                                      "Average_Review_%" = "Average Review", 
                                      "Excellent_Review_%" = "Excellent Review"))) +     
  scale_fill_manual(values = c("Poor_Review_%" = "#F8766D",
                                "Average_Review_%" = "#619CFF",
                                "Excellent_Review_%" = "#00BA38")) +
  theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        legend.position = "none")
  
ggsave(here("results/Scatter_Side_Effects_Review_all.png"), plot = Scatter_Side_Effects_Review, width = 6, height = 4)
  
print(Scatter_Side_Effects_Review)

```

From this plot no tendency is seen of drugs with fewer side effects having a better review classification or vice versa. The correlation seems completely random.

As no correlation is found for number of side effects, perhaps another variable is influencing the review percentages.

### Influence of Administration Type

Another variable, that might influence the drug review levels, could be the type of administration. Therefore, the distribution of each review level of administration type is investigated. If administration type is essential for review level percentages, the distribution would be different for each administration type with a lower variance. All review levels are shown in individual box plots. As some administration types include too few observations (\<= 3 obs), these are visualized in grey. A distribution based on three or less observations is too few to conclude an actual distribution.

#### Poor Review Distribution

```{r}

# Filter the data in order to remove duplicate IDs for each Administration type
Poor_review_distinct_data <- cancer_data |> 
  filter(Review_level == "Poor_Review_%") |> 
  distinct(ID, 
           Administration_type,
           .keep_all = TRUE) 

# Counting observations for each administration type and adding to dataframe by leftjoining.
count_data <- Poor_review_distinct_data |> 
  group_by(Administration_type) |> 
  summarise(count = n_distinct(ID)) |> 
  ungroup()

Poor_review_distinct_data <- Poor_review_distinct_data|>
  left_join(count_data, by = "Administration_type")

Poor_review_distinct_data <- Poor_review_distinct_data|>
  mutate(Administration_type = str_c(Administration_type, " (n=", count, ")" ))

# In order to color the boxplot based on amount of obs making a new column.
Poor_review_distinct_data <-Poor_review_distinct_data |> 
  mutate(fill_value = ifelse(count > 3, 
                             "More than 3 obs",
                             "3 or less obs"))

# Create the plot Review Percentage for the poor review based on adminstartion type
Poor_review_boxplot <- ggplot(Poor_review_distinct_data,
                                   aes(x = Administration_type,
                                       y = `Review_%`,
                                       fill = fill_value)) +
  geom_boxplot(alpha = 0.7) +
  labs(x = "Administration Type",
       y = "Review Percentage",
       title = "Poor Review Percentage for Administration Types", 
       fill = "Count category") +
  scale_fill_manual(values = c("More than 3 obs" =  "#F8766D",
                               "3 or less obs" = "lightgrey")) +
  theme_minimal() + 
  theme(axis.text.x = element_text(angle = 45,
                                   hjust = 1),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank())   

# Print the plot
print(Poor_review_boxplot)

```

#### Average Review Distribution

```{r}
# Filter the data in order to remove duplicate IDs for each Administration type
Average_review_distinct_data <- cancer_data |> 
  filter(Review_level == "Average_Review_%") |> 
  distinct(ID,
           Administration_type,
           .keep_all = TRUE) 

# Counting observations for each administration type and adding to dataframe by leftjoining.
count_data <- Average_review_distinct_data |> 
  group_by(Administration_type) |> 
  summarise(count = n_distinct(ID)) |> 
  ungroup()


Average_review_distinct_data <- Average_review_distinct_data|>
  left_join(count_data, by = "Administration_type")

Average_review_distinct_data <- Average_review_distinct_data|>
  mutate(Administration_type = str_c(Administration_type, " (n=", count, ")" ))



# In order to color the boxplot based on amount of obs making a new column.
Average_review_distinct_data <-Average_review_distinct_data |> 
  mutate(fill_value = ifelse(count > 3, 
                             "More than 3 obs",
                             "3 or less obs"))

# Create the plot Review Percentage for the poor review based on adminstartion type
Average_review_boxplot <- ggplot(Average_review_distinct_data ,
                                   aes(x = Administration_type,
                                       y = `Review_%`,
                                       fill = fill_value)) +
  geom_boxplot(alpha = 0.7) +
  labs(x = "Administration Type",
       y = "Review Percentage",
       title = "Average Review Percentage for Administration Types", 
       fill = "Count category") +
  scale_fill_manual(values = c("More than 3 obs" = "#619CFF",
                               "3 or less obs" = "lightgrey")) +
  theme_minimal() + 
  theme(axis.text.x = element_text(angle = 45,
                                   hjust = 1),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank())  


# Print the plot
print(Average_review_boxplot)

```

#### Excellent Review Distribution

```{r}

# Filter the data in order to remove duplicate IDs for each Administration type
excellent_review_distinct_data <- cancer_data |> 
  filter(Review_level == "Excellent_Review_%") |> 
  distinct(ID, Administration_type, .keep_all = TRUE) 

# Counting observations for each administration type and adding to dataframe by leftjoining.
count_data <- excellent_review_distinct_data |> 
  group_by(Administration_type) |> 
  summarise(count = n_distinct(ID)) |> 
  ungroup()


excellent_review_distinct_data <- excellent_review_distinct_data|>
  left_join(count_data, by = "Administration_type")

excellent_review_distinct_data <- excellent_review_distinct_data|>
  mutate(Administration_type = str_c(Administration_type, " (n=", count, ")" ))


# In order to color the boxplot based on amount of obs making a new column.
excellent_review_distinct_data <-excellent_review_distinct_data |> 
  mutate(fill_value = ifelse(count > 3,
                             "More than 3 obs",
                             "3 or less obs"))

# Create the plot Review Percentage for the poor review based on adminstartion type
excellent_review_boxplot <- ggplot(excellent_review_distinct_data,
                                   aes(x = Administration_type,
                                       y = `Review_%`,
                                       fill = fill_value)) +
  geom_boxplot(alpha = 0.7) +
  labs(x = "Administration Type",
       y = "Review Percentage",
       title = "Excellent Review Percentage for Administration Types", 
       fill = "Count category") +
  scale_fill_manual(values = c("More than 3 obs" =  "#00BA38",
                               "3 or less obs" = "lightgrey")) +
  theme_minimal() + 
  theme(axis.text.x = element_text(angle = 45,
                                   hjust = 1),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        legend.position = "bottom")   


ggsave(here("results/boxplot_Excellent_Administration_type.png"),
       plot = excellent_review_boxplot,
       width = 6,
       height = 4)

# Print the plot
print(excellent_review_boxplot)

```

From all three plots all the administration distributions are overlapping, not indicating a review level being dependent on administration type.
