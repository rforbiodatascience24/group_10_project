---
title: "02_clean"
format: html
editor: visual
---

## Data wrangling

Loading libraries which will be used for the data wrangling

```{r}
library("tidyverse")
library("purrr")
library("broom")

```

Viewing the data to get the number of observations and variables in the raw data

```{r}
View(raw_data)
```

As the three rules for making a data set tidy are satisfied. Each variable has its own column, each observation has its own row and each value has its own cell. The unit will not be changed as they are comparable and already in the preferred imperial system.

To make the data more interpretative, any variable not relevant for the project is removed from the raw data. Furthermore, rows consisting of only NAs will be removed from the dataset.

```{r}

# Selection of relevant columns from the raw data

clean_data <- rawdata |>
  # Selecting relevant variables 
  select(c(casenum,
           year, 
           month, 
           age, 
           race, 
           sex, 
           wbc,
           pmn,
           bloodgl, 
           gl, 
           pr, 
           reds, 
           whites, 
           polys, 
           lymphs, 
           monos, 
           abm)) |>
  
  # Renaming selected variables 
  rename(wbc_blood = wbc,
         pmn_blood = pmn,
         gl_blood = bloodgl,
         gl_CSF = gl,
         pr_CSF = pr,
         reds_CSF = reds,
         whites_CSF = whites, 
         pmn_CSF = polys, 
         lymphs_CSF = lymphs, 
         monos_CSF = monos,
         AM_type = amb) |>
  
  # Remvoing complete NA rows
  
  
  
  
  



```

The primary data wrangling will therefore focus on removing empty cells and selecting relevant variables for data analysis.

```{r}

raw_data <- raw_data |>
  filter(age != "N/A") |>
   mutate(age_group = case_when(
    age > 0 & age <= 0.5 ~ "(0,0.5]",
    age > 0.5 & age <= 40 ~ "(0.5, 1]",
    age > 1 & age <= 3 ~ "(1,3]",
    age > 3 & age <= 5 ~ "(3,5]",
    age > 5 & age <= 55 ~ "(5,55]",
    age > 55 & age <= 100 ~ "(55,100]")) |>
    mutate(Age_group = factor(Age_group,
                            levels =  c("(20,30]", "(30,40]",
                                        "(40,50]", "(50,60]",
                                        "(60,70]","(70,80]")))
```
