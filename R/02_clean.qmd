---
title: "02_clean"
format: html
editor: visual
---

## Library load

Loading libraries which will be used for the data wrangling

```{r}
library("tidyverse")
library("purrr")
library("broom")
library("readr")
```

## Data load

Loading the tsv file from the data folder.

```{r}
data <- read_tsv("../data/01_dat_load.tsv")
```

## View data

Viewing the data to get the number of observations and variables in the raw data.

```{r}
# View the first few observations
head(data)
```

The three rules for making a data set tidy must be satisfied. Each variable must have its own column, each observation have its own row and each value have its own cell.

It can be observed from viewing the data that multiple of the variables contain more than one value. Therefore, each value does not have its own cell which means the data is not tidy.

To make sure the data is tidy these values are separated into different columns/variables.

```{r}
clean_data <- data |>
  separate(`Medicine Name`, into = c("Medicine Name", "Medication administration"), sep = " ")

```

```{r}
clean_data <- data |>
  extract(
    `Medicine Name`, 
    into = c("Medicine Name", "Medication administration"),
    regex = "^([^ ]+)[ ]?(.*)$", 
    remove = FALSE # Retains original column if needed
  ) |>
  extract(`Medication administration`,
          into = c("Medication administration","Remove"),
          regex = "^([^ ]+)[ ]?(.*)$",
          remove = FALSE)


```

Note:

\^(\[\^ \]+): Captures the first word up to space, (.\*)$: Captures the rest of the string, (.*)$: Captures the rest of the string up to space

```{r}

# Selection of relevant columns from the raw data

clean_data <- rawdata |>
  # Selecting relevant variables 
  select(c(casenum,
           year, 
           month, 
           age, 
           race, 
           sex, 
           wbc,
           pmn,
           bloodgl, 
           gl, 
           pr, 
           reds, 
           whites, 
           polys, 
           lymphs, 
           monos, 
           abm)) |>
  
  # Renaming selected variables 
  rename(wbc_blood = wbc,
         pmn_blood = pmn,
         gl_blood = bloodgl,
         gl_CSF = gl,
         pr_CSF = pr,
         reds_CSF = reds,
         whites_CSF = whites, 
         pmn_CSF = polys, 
         lymphs_CSF = lymphs, 
         monos_CSF = monos,
         AM_type = amb) |>
  
  # Remvoing complete NA rows
  
  
  
  
  



```

The primary data wrangling will therefore focus on removing empty cells and selecting relevant variables for data analysis.

```{r}

raw_data <- raw_data |>
  filter(age != "N/A") |>
   mutate(age_group = case_when(
    age > 0 & age <= 0.5 ~ "(0,0.5]",
    age > 0.5 & age <= 40 ~ "(0.5, 1]",
    age > 1 & age <= 3 ~ "(1,3]",
    age > 3 & age <= 5 ~ "(3,5]",
    age > 5 & age <= 55 ~ "(5,55]",
    age > 55 & age <= 100 ~ "(55,100]")) |>
    mutate(Age_group = factor(Age_group,
                            levels =  c("(20,30]", "(30,40]",
                                        "(40,50]", "(50,60]",
                                        "(60,70]","(70,80]")))
```
